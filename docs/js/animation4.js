/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/animation4.js":
/*!******************************!*\
  !*** ./src/js/animation4.js ***!
  \******************************/
/***/ (function() {

eval("var currentImg = undefined,\n    currentImgProps = {\n  x: 0,\n  y: 0\n},\n    isZooming = false,\n    column = -1,\n    mouse = {\n  x: 0,\n  y: 0\n},\n    delayedPlay;\n\nfor (var i = 0; i < 12; i++) {\n  if (i % 4 == 0) column++;\n  var b = document.createElement('div');\n  document.querySelector('.mainBoxes').appendChild(b); //$('.mainBoxes').append(b);\n\n  gsap.set(b, {\n    attr: {\n      id: 'b' + i,\n      class: 'photoBox pb-col' + column\n    },\n    backgroundImage: 'url(https://assets.codepen.io/721952/' + i + '.jpg)',\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n    overflow: 'hidden',\n    x: [60, 280, 500][column],\n    width: 400,\n    height: 640,\n    borderRadius: 20,\n    scale: 0.5,\n    zIndex: 1\n  });\n  b.tl = gsap.timeline({\n    paused: true,\n    repeat: -1\n  }).fromTo(b, {\n    y: [-575, 800, 800][column],\n    rotation: -0.05\n  }, {\n    duration: [40, 35, 26][column],\n    y: [800, -575, -575][column],\n    rotation: 0.05,\n    ease: 'none'\n  }).progress(i % 4 / 4);\n}\n\nfunction pauseBoxes(b) {\n  var classStr = 'pb-col0';\n  if ($(b).hasClass('pb-col1')) classStr = 'pb-col1';\n  if ($(b).hasClass('pb-col2')) classStr = 'pb-col2';\n\n  for (var i = 0; i < $('.mainBoxes').children().length; i++) {\n    var b = $('.mainBoxes').children()[i];\n    if ($(b).hasClass(classStr)) gsap.to(b.tl, {\n      timeScale: 0,\n      ease: 'sine'\n    });\n  }\n}\n\nfunction playBoxes() {\n  for (var i = 0; i < $('.mainBoxes').children().length; i++) {\n    var tl = $('.mainBoxes').children()[i].tl;\n    tl.play();\n    gsap.to(tl, {\n      duration: 0.4,\n      timeScale: 1,\n      ease: 'sine.in',\n      overwrite: true\n    });\n  }\n}\n\nwindow.onload = function () {\n  var _tl = gsap.timeline({\n    onStart: playBoxes\n  }).set('.main', {\n    perspective: 800\n  }).set('.photoBox', {\n    opacity: 1,\n    cursor: 'pointer'\n  }).set('.mainBoxes', {\n    left: '75%',\n    xPercent: -50,\n    width: 1200,\n    rotationX: 14,\n    rotationY: -15,\n    rotationZ: 10\n  }).set('.mainClose', {\n    autoAlpha: 0,\n    width: 60,\n    height: 60,\n    left: -30,\n    top: -31,\n    pointerEvents: 'none'\n  }).fromTo('.main', {\n    autoAlpha: 0\n  }, {\n    duration: 0.6,\n    ease: 'power2.inOut',\n    autoAlpha: 1\n  }, 0.2);\n\n  $('.photoBox').on('mouseenter', function (e) {\n    console.log($(e.currentTarget).hasClass('pb-col0'));\n    if (currentImg) return;\n    if (delayedPlay) delayedPlay.kill();\n    pauseBoxes(e.currentTarget);\n    var _t = e.currentTarget;\n    gsap.to('.photoBox', {\n      duration: 0.2,\n      overwrite: 'auto',\n      opacity: function opacity(i, t) {\n        return t == _t ? 1 : 0.33;\n      }\n    });\n    gsap.fromTo(_t, {\n      zIndex: 100\n    }, {\n      duration: 0.2,\n      scale: 0.62,\n      overwrite: 'auto',\n      ease: 'power3'\n    });\n  });\n  $('.photoBox').on('mouseleave', function (e) {\n    if (currentImg) return;\n    var _t = e.currentTarget;\n    if (gsap.getProperty(_t, 'scale') > 0.62) delayedPlay = gsap.delayedCall(0.3, playBoxes); // to avoid jump, add delay when mouseout occurs as big image scales back down (not 100% reliable because the scale value sometimes evaluates too late)\n    else playBoxes();\n    gsap.timeline().set(_t, {\n      zIndex: 1\n    }).to(_t, {\n      duration: 0.3,\n      scale: 0.5,\n      overwrite: 'auto',\n      ease: 'expo'\n    }, 0).to('.photoBox', {\n      duration: 0.5,\n      opacity: 1,\n      ease: 'power2.inOut'\n    }, 0);\n  });\n  $('.photoBox').on('click', function (e) {\n    if (!isZooming) {\n      //only tween if photoBox isn't currently zooming\n      isZooming = true;\n      gsap.delayedCall(0.8, function () {\n        isZooming = false;\n      });\n\n      if (currentImg) {\n        gsap.timeline({\n          defaults: {\n            ease: 'expo.inOut'\n          }\n        }).to('.mainClose', {\n          duration: 0.1,\n          autoAlpha: 0,\n          overwrite: true\n        }, 0).to('.mainBoxes', {\n          duration: 0.5,\n          scale: 1,\n          left: '75%',\n          width: 1200,\n          rotationX: 14,\n          rotationY: -15,\n          rotationZ: 10,\n          overwrite: true\n        }, 0).to('.photoBox', {\n          duration: 0.6,\n          opacity: 1,\n          ease: 'power4.inOut'\n        }, 0).to(currentImg, {\n          duration: 0.6,\n          width: 400,\n          height: 640,\n          borderRadius: 20,\n          x: currentImgProps.x,\n          y: currentImgProps.y,\n          scale: 0.5,\n          rotation: 0,\n          zIndex: 1\n        }, 0); // .add(playBoxes, 0.8)\n\n        currentImg = undefined;\n      } else {\n        pauseBoxes(e.currentTarget);\n        currentImg = e.currentTarget;\n        currentImgProps.x = gsap.getProperty(currentImg, 'x');\n        currentImgProps.y = gsap.getProperty(currentImg, 'y');\n        gsap.timeline({\n          defaults: {\n            duration: 0.6,\n            ease: 'expo.inOut'\n          }\n        }).set(currentImg, {\n          zIndex: 100\n        }).fromTo('.mainClose', {\n          x: mouse.x,\n          y: mouse.y,\n          background: 'rgba(0,0,0,0)'\n        }, {\n          autoAlpha: 1,\n          duration: 0.3,\n          ease: 'power3.inOut'\n        }, 0).to('.photoBox', {\n          opacity: 0\n        }, 0).to(currentImg, {\n          width: '100%',\n          height: '100%',\n          borderRadius: 0,\n          x: 0,\n          top: 0,\n          y: 0,\n          scale: 1,\n          opacity: 1\n        }, 0).to('.mainBoxes', {\n          duration: 0.5,\n          left: '50%',\n          width: '100%',\n          rotationX: 0,\n          rotationY: 0,\n          rotationZ: 0\n        }, 0.15).to('.mainBoxes', {\n          duration: 5,\n          scale: 1.06,\n          rotation: 0.05,\n          ease: 'none'\n        }, 0.65);\n      }\n    }\n  });\n\n  if (!!('ontouchstart' in window)) {\n    console.log('touch device!');\n    mouse.x = window.innerWidth - 50;\n    mouse.y = 60;\n  } else {\n    $('.main').on('mousemove', function (e) {\n      mouse.x = e.x;\n      mouse.y = e.layerY;\n      if (currentImg) gsap.to('.mainClose', {\n        duration: 0.1,\n        x: mouse.x,\n        y: mouse.y,\n        overwrite: 'auto'\n      });\n    });\n  }\n};\n\n//# sourceURL=webpack://aaa/./src/js/animation4.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/animation4.js"]();
/******/ 	
/******/ })()
;